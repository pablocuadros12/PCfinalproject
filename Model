# -*- coding: utf-8 -*-
"""ModelcodeLR.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1WlDyJuw0tqokIhv2e-b-gaAE8YL7w_4i
"""

!pip install pandas scikit-learn joblib
!pip install ucimlrepo

# Import necessary libraries
from ucimlrepo import fetch_ucirepo
import pandas as pd
from sklearn.model_selection import train_test_split
from sklearn.linear_model import LogisticRegression
from sklearn.metrics import accuracy_score, precision_score, recall_score, f1_score, classification_report
import joblib

from ucimlrepo import fetch_ucirepo

# fetch dataset
cdc_diabetes_health_indicators = fetch_ucirepo(id=891)

# data (as pandas dataframes)
X = cdc_diabetes_health_indicators.data.features
y = cdc_diabetes_health_indicators.data.targets

# Select demographic and medical history features
selected_features = [
    'HighBP', 'HighChol', 'CholCheck', 'BMI',
    'HeartDiseaseorAttack', 'PhysActivity', 'AnyHealthcare', 'NoDocbcCost', 'GenHlth',
    'MentHlth', 'PhysHlth', 'DiffWalk', 'Sex', 'Age', 'Education', 'Income'
]

# Ensure the selected features are in the dataset
if X is not None and set(selected_features).issubset(X.columns):
    X = X[selected_features]

    #Split the data into training and testing sets
    X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42)

    #Train the Logistic Regression model
    model = LogisticRegression(max_iter=10000, random_state=42)
    model.fit(X_train, y_train)

    #Evaluate the model
    y_pred = model.predict(X_test)
    print('Accuracy:', accuracy_score(y_test, y_pred))
    print('Precision:', precision_score(y_test, y_pred))
    print('Recall:', recall_score(y_test, y_pred))
    print('F1-score:', f1_score(y_test, y_pred))
    print(classification_report(y_test, y_pred))

    #Save the model
    joblib.dump(model, 'logistic_regression_model.pkl')
else:
    print("Selected features are not present in the dataset or dataset could not be loaded.")
